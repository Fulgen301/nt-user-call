//! Provides enumerations for the OS-specific `apfnSimpleCall` indices and a mapping from [`crate::functions::NtUserCall`] to the corresponding index.

use crate::version::{get_os_version, OsVersion};

use super::functions::NtUserCall;

macro_rules! user_call_enum {
    ( $os:ident { $($variant:ident $(= $index:literal)?),+ } ) => {
        pub mod $os {
            #[allow(non_camel_case_types)]
            #[repr(u16)]
            #[derive(Debug, Clone, Copy)]
            pub enum NtUserCallIndex {
                $($variant $(= $index)?),+
            }

            impl TryFrom<super::NtUserCall> for NtUserCallIndex {
                type Error = ();

                fn try_from(value: super::NtUserCall) -> Result<Self, Self::Error> {
                    match value {
                        $(super::NtUserCall::$variant => Ok(Self::$variant)),+
                        ,
                        #[allow(unreachable_patterns)]
                        _ => Err(())
                    }
                }
            }
        }
    };
}

#[cfg(any(target_vendor = "win7", feature = "all_os_versions"))]
user_call_enum! {
    win7 {
        CreateMenu = 0,
        CreatePopupMenu = 1,
        AllowForegroundActivation = 2,
        ClearWakeMask = 3,
        CreateSystemThreads = 4,
        DesktopHasWatermarkText = 5,
        DestroyCaret = 6,
        DisableProcessWindowsGhosting = 7,
        GetDeviceChangeInfo = 8,
        GetIMEShowStatus = 9,
        GetInputDesktop = 10,
        GetMessagePos = 11,
        HandleSystemThreadCreationFailure = 12,
        HideCursorNoCapture = 13,
        LoadCursorsAndIcons = 14,
        LoadUserApiHook = 15,
        PrepareForLogoff = 16,
        ReleaseCapture = 17,
        ResetDblClk = 18,
        ZapActiveAndFocus = 19,
        RemoteConsoleShadowStop = 20,
        RemoteDisconnect = 21,
        RemoteLogoff = 22,
        RemoteNtSecurity = 23,
        RemoteShadowSetup = 24,
        RemoteShadowStop = 25,
        RemotePassthruEnable = 26,
        RemotePassthruDisable = 27,
        RemoteConnectState = 28,
        UpdatePerUserImmEnabling = 29,
        UserPowerCalloutWorker = 30,
        WakeRITForShutdown = 31,
        DoInitMessagePumpHook = 32,
        DoUninitMessagePumpHook = 33,
        BeginDeferWindowPos = 34,
        GetSendMessageReceiver = 35,
        WindowFromDC = 36,
        AllowSetForegroundWindow = 37,
        CreateEmptyCursorObject = 38,
        CsDdeUninitialize = 39,
        DirectedYield = 40,
        EnumClipboardFormats = 41,
        GetInputEvent = 42,
        GetKeyboardLayout = 43,
        GetKeyboardType = 44,
        GetProcessDefaultLayout = 45,
        GetQueueStatus = 46,
        GetWinStationInfo = 47,
        LockSetForegroundWindow = 48,
        LW_LoadFonts = 49,
        MapDesktopObject = 50,
        MessageBeep = 51,
        PlayEventSound = 52,
        PostQuitMessage = 53,
        RealizePalette = 54,
        RegisterLPK = 55,
        RegisterSystemThread = 56,
        RemoteReconnect = 57,
        RemoteThinwireStats = 58,
        ReleaseDC = 59,
        RemoteNotify = 60,
        ReplyMessage = 61,
        SetCaretBlinkTime = 62,
        SetDoubleClickTime = 63,
        SetMessageExtraInfo = 64,
        SetProcessDefaultLayout = 65,
        SetWatermarkStrings = 66,
        ShowCursor = 67,
        ShowStartGlass = 68,
        SwapMouseButton = 69,
        WOWModuleUnload = 70,
        DeregisterShellHookWindow = 71,
        DWP_GetEnabledPopup = 72,
        GetWindowContextHelpId = 73,
        RegisterShellHookWindow = 74,
        SetMsgBox = 75,
        SetProgmanWindow = 76,
        SetTaskmanWindow = 77,
        GetClassIcoCur = 78,
        ClearWindowState = 79,
        KillSystemTimer = 80,
        NotifyOverlayWindow = 81,
        SetDialogPointer = 82,
        SetVisible = 83,
        SetWindowContextHelpId = 84,
        SetWindowState = 85,
        ArrangeIconicWindows = 86,
        DrawMenuBar = 87,
        CheckImeShowStatusInThread = 88,
        GetSysMenuHandle = 89,
        RedrawFrame = 90,
        RedrawFrameAndHook = 91,
        SetDialogSystemMenu = 92,
        StubSetForegroundWindow = 93,
        SetSysMenu = 94,
        UpdateClientRect = 95,
        UpdateWindow = 96,
        BroadcastImeShowStatusChange = 97,
        EnableWindow = 98,
        RedrawTitle = 99,
        ShowOwnedPopups = 100,
        SwitchToThisWindow = 101,
        UpdateWindows = 102,
        ValidateRgn = 103,
        ChangeWindowMessageFilter = 104,
        GetCursorPos = 105,
        GetHDevName = 106,
        InitAnsiOem = 107,
        NlsKbdSendIMENotification = 108,
        RegisterGhostWindow = 109,
        RegisterLogonProcess = 110,
        RegisterSiblingFrostWindow = 111,
        RegisterUserHungAppHandlers = 112,
        RemoteShadowCleanup = 113,
        RemoteShadowStart = 114,
        SetCaretPos = 115,
        SetCursorPos = 116,
        SetPhysicalCursorPos = 117,
        UnhookWindowsHook = 118,
        WOWCleanup = 119
    }
}

user_call_enum! {
    win8 {
        CreateMenu = 0,
        CreatePopupMenu = 1,
        AllowForegroundActivation = 2,
        ClearWakeMask = 3,
        CreateSystemThreads = 4,
        DestroyCaret = 5,
        DisableProcessWindowsGhosting = 6,
        GetDeviceChangeInfo = 7,
        GetIMEShowStatus = 8,
        GetInputDesktop = 9,
        GetMessagePos = 10,
        GetUnpredictedMessagePos = 11,
        HandleSystemThreadCreationFailure = 12,
        HideCursorNoCapture = 13,
        IsQueueAttached = 14,
        LoadCursorsAndIcons = 15,
        LoadUserApiHook = 16,
        PrepareForLogoff = 17,
        ReleaseCapture = 18,
        ResetDblClk = 19,
        ZapActiveAndFocus = 20,
        RemoteConsoleShadowStop = 21,
        RemoteDisconnect = 22,
        RemoteLogoff = 23,
        RemoteShadowSetup = 25,
        RemoteShadowStop = 26,
        RemotePassthruEnable = 27,
        RemotePassthruDisable = 28,
        RemoteConnectState = 29,
        UpdatePerUserImmEnabling = 30,
        UserPowerCalloutWorker = 31,
        WakeRITForShutdown = 32,
        DoInitMessagePumpHook = 33,
        DoUninitMessagePumpHook = 34,
        DeferredDesktopRotation = 35,
        BeginDeferWindowPos = 36,
        GetSendMessageReceiver = 37,
        WindowFromDC = 38,
        AllowSetForegroundWindow = 39,
        CreateEmptyCursorObject = 40,
        CsDdeUninitialize = 41,
        KbdNlsFuncTypeDummy = 42,
        EnumClipboardFormats = 43,
        GetInputEvent = 44,
        GetKeyboardLayout = 45,
        GetKeyboardType = 46,
        GetProcessDefaultLayout = 47,
        GetQueueStatus = 48,
        GetWinStationInfo = 49,
        LockSetForegroundWindow = 50,
        LW_LoadFonts = 51,
        MapDesktopObject = 52,
        MessageBeep = 53,
        PlayEventSound = 54,
        PostQuitMessage = 55,
        RealizePalette = 56,
        RegisterLPK = 57,
        RegisterSystemThread = 58,
        RemoteReconnect = 59,
        RemoteThinwireStats = 60,
        ReleaseDC = 61,
        RemoteNotify = 62,
        ReplyMessage = 63,
        SetCaretBlinkTime = 64,
        SetDoubleClickTime = 65,
        SetMessageExtraInfo = 66,
        SetProcessDefaultLayout = 67,
        SetWatermarkStrings = 68,
        ShowCursor = 69,
        ShowStartGlass = 70,
        SwapMouseButton = 71,
        WOWModuleUnload = 72,
        DwmLockScreenUpdates = 73,
        EnableSessionForMMCSS = 74,
        SetWaitForQueueAttach = 75,
        ThreadMessageQueueAttached = 76,
        DeregisterShellHookWindow = 77,
        DWP_GetEnabledPopup = 78,
        GetWindowContextHelpId = 79,
        RegisterShellHookWindow = 80,
        SetMsgBox = 81,
        SetProgmanWindow = 82,
        SetTaskmanWindow = 83,
        GetClassIcoCur = 84,
        ClearWindowState = 85,
        KillSystemTimer = 86,
        NotifyOverlayWindow = 87,
        SetDialogPointer = 88,
        SetVisible = 89,
        SetWindowContextHelpId = 90,
        SetWindowState = 91,
        ArrangeIconicWindows = 92,
        DrawMenuBar = 93,
        CheckImeShowStatusInThread = 94,
        GetSysMenuHandle = 95,
        RedrawFrame = 96,
        RedrawFrameAndHook = 97,
        SetDialogSystemMenu = 98,
        StubSetForegroundWindow = 99,
        SetSysMenu = 100,
        UpdateClientRect = 101,
        UpdateWindow = 102,
        SetActiveImmersiveWindow = 103,
        BroadcastImeShowStatusChange = 104,
        EnableWindow = 105,
        RedrawTitle = 106,
        ShowOwnedPopups = 107,
        SwitchToThisWindow = 108,
        UpdateWindows = 109,
        ValidateRgn = 110,
        ChangeWindowMessageFilter = 111,
        GetCursorPos = 112,
        GetHDevName = 113,
        InitAnsiOem = 114,
        NlsKbdSendIMENotification = 115,
        RegisterGhostWindow = 116,
        RegisterLogonProcess = 117,
        RegisterSiblingFrostWindow = 118,
        RegisterUserHungAppHandlers = 119,
        RemoteShadowCleanup = 120,
        RemoteShadowStart = 121,
        SetCaretPos = 122,
        SetCursorPos = 123,
        SetPhysicalCursorPos = 124,
        UnhookWindowsHook = 125,
        WOWCleanup = 126
    }
}

user_call_enum! {
    win81 {
        CreateMenu = 0,
        CreatePopupMenu = 1,
        AllowForegroundActivation = 2,
        ClearWakeMask = 3,
        CreateSystemThreads = 4,
        DestroyCaret = 5,
        DisableProcessWindowsGhosting = 6,
        GetDeviceChangeInfo = 7,
        GetIMEShowStatus = 8,
        GetInputDesktop = 9,
        GetMessagePos = 10,
        GetUnpredictedMessagePos = 11,
        HandleSystemThreadCreationFailure = 12,
        HideCursorNoCapture = 13,
        IsQueueAttached = 14,
        LoadCursorsAndIcons = 15,
        LoadUserApiHook = 16,
        PrepareForLogoff = 17,
        ReleaseCapture = 18,
        ResetDblClk = 19,
        ZapActiveAndFocus = 20,
        RemoteConsoleShadowStop = 21,
        RemoteDisconnect = 22,
        RemoteLogoff = 23,
        RemoteShadowSetup = 25,
        RemoteShadowStop = 26,
        RemotePassthruEnable = 27,
        RemotePassthruDisable = 28,
        RemoteConnectState = 29,
        UpdatePerUserImmEnabling = 30,
        UserPowerCalloutWorker = 31,
        WakeRITForShutdown = 32,
        DoInitMessagePumpHook = 33,
        DoUninitMessagePumpHook = 34,
        EnableMiPShellThread = 35,
        IsMiPShellThreadEnabled = 36,
        DeferredDesktopRotation = 37,
        BeginDeferWindowPos = 38,
        GetSendMessageReceiver = 39,
        WindowFromDC = 40,
        AllowSetForegroundWindow = 41,
        CreateEmptyCursorObject = 42,
        CsDdeUninitialize = 43,
        KbdNlsFuncTypeDummy = 44,
        EnumClipboardFormats = 45,
        GetInputEvent = 46,
        GetKeyboardLayout = 47,
        GetKeyboardType = 48,
        GetProcessDefaultLayout = 49,
        GetQueueStatus = 50,
        GetWinStationInfo = 51,
        LockSetForegroundWindow = 52,
        LW_LoadFonts = 53,
        MapDesktopObject = 54,
        MessageBeep = 55,
        PlayEventSound = 56,
        PostQuitMessage = 57,
        RealizePalette = 58,
        RegisterLPK = 59,
        RegisterSystemThread = 60,
        RemoteReconnect = 61,
        RemoteThinwireStats = 62,
        ReleaseDC = 63,
        RemoteNotify = 64,
        ReplyMessage = 65,
        SetCaretBlinkTime = 66,
        SetDoubleClickTime = 67,
        SetMessageExtraInfo = 68,
        SetProcessDefaultLayout = 69,
        SetWatermarkStrings = 70,
        ShowCursor = 71,
        ShowStartGlass = 72,
        SwapMouseButton = 73,
        WOWModuleUnload = 74,
        DwmLockScreenUpdates = 75,
        EnableSessionForMMCSS = 76,
        SetWaitForQueueAttach = 77,
        ThreadMessageQueueAttached = 78,
        PostUIActions = 79,
        DeregisterShellHookWindow = 80,
        DWP_GetEnabledPopup = 81,
        GetWindowContextHelpId = 82,
        RegisterShellHookWindow = 83,
        SetMsgBox = 84,
        SetProgmanWindow = 85,
        SetTaskmanWindow = 86,
        GetClassIcoCur = 87,
        ClearWindowState = 88,
        KillSystemTimer = 89,
        NotifyOverlayWindow = 90,
        RegisterKeyboardCorrectionCallout = 91,
        SetDialogPointer = 92,
        SetVisible = 93,
        SetWindowContextHelpId = 94,
        SetWindowState = 95,
        ArrangeIconicWindows = 96,
        DrawMenuBar = 97,
        CheckImeShowStatusInThread = 98,
        GetSysMenuHandle = 99,
        RedrawFrame = 100,
        RedrawFrameAndHook = 101,
        SetDialogSystemMenu = 102,
        StubSetForegroundWindow = 103,
        SetSysMenu = 104,
        UpdateClientRect = 105,
        UpdateWindow = 106,
        SetActiveImmersiveWindow = 107,
        BroadcastImeShowStatusChange = 108,
        EnableWindow = 109,
        RedrawTitle = 110,
        ShowOwnedPopups = 111,
        SwitchToThisWindow = 112,
        UpdateWindows = 113,
        ValidateRgn = 114,
        MonitorFromWindow = 115,
        ChangeWindowMessageFilter = 116,
        GetCursorPos = 117,
        GetHDevName = 118,
        InitAnsiOem = 119,
        NlsKbdSendIMENotification = 120,
        RegisterGhostWindow = 121,
        RegisterLogonProcess = 122,
        RegisterSiblingFrostWindow = 123,
        RegisterUserHungAppHandlers = 124,
        RemoteShadowCleanup = 125,
        RemoteShadowStart = 126,
        SetCaretPos = 127,
        SetCursorPos = 128,
        UnhookWindowsHook = 129,
        WOWCleanup = 130
    }
}

user_call_enum! {
    win10 {
        CreateMenu = 0,
        CreatePopupMenu = 1,
        AllowForegroundActivation = 2,
        CancelQueueEventCompletionPacket = 3,
        ClearWakeMask = 4,
        CreateSystemThreads = 5,
        DestroyCaret = 6,
        DisableProcessWindowsGhosting = 7,
        DrainThreadCoreMessagingCompletions = 8,
        GetDeviceChangeInfo = 9,
        GetIMEShowStatus = 10,
        GetInputDesktop = 11,
        GetMessagePos = 12,
        GetQueueIocp = 13,
        GetUnpredictedMessagePos = 14,
        HandleSystemThreadCreationFailure = 15,
        HideCursorNoCapture = 16,
        IsQueueAttached = 17,
        LoadCursorsAndIcons = 18,
        LoadUserApiHook = 19,
        PrepareForLogoff = 20,
        ReassociateQueueEventCompletionPacket = 21,
        ReleaseCapture = 22,
        RemoveQueueCompletion = 23,
        ResetDblClk = 24,
        ZapActiveAndFocus = 25,
        RemoteConsoleShadowStop = 26,
        RemoteDisconnect = 27,
        RemoteLogoff = 28,
        EditionPostKeyboardInputMessage = 29,
        RemoteShadowSetup = 30,
        RemoteShadowStop = 31,
        RemotePassthruEnable = 32,
        RemotePassthruDisable = 33,
        RemoteConnectState = 34,
        TraceLoggingSendMixedModeTelemetry = 35,
        UpdatePerUserImmEnabling = 36,
        UserPowerCalloutWorker = 37,
        WakeRITForShutdown = 38,
        DoInitMessagePumpHook = 39,
        DoUninitMessagePumpHook = 40,
        EnableMouseInPointerForThread = 41,
        DeferredDesktopRotation = 42,
        EnablePerMonitorMenuScaling = 43,
        BeginDeferWindowPos = 44,
        GetSendMessageReceiver = 45,
        AllowSetForegroundWindow = 46,
        CsDdeUninitialize = 47,
        EditionGetExecutionEvironment = 48,
        EnumClipboardFormats = 49,
        GetInputEvent = 50,
        GetKeyboardType = 51,
        GetProcessDefaultLayout = 52,
        GetWinStationInfo = 53,
        LockSetForegroundWindow = 54,
        LW_LoadFonts = 55,
        MapDesktopObject = 56,
        MessageBeep = 57,
        PlayEventSound = 58,
        PostQuitMessage = 59,
        RealizePalette = 60,
        RegisterLPK = 61,
        RegisterSystemThread = 62,
        RemoteReconnect = 63,
        RemoteThinwireStats = 64,
        RemoteNotify = 65,
        ReplyMessage = 66,
        SetCaretBlinkTime = 67,
        SetDoubleClickTime = 68,
        SetMessageExtraInfo = 69,
        SetProcessDefaultLayout = 70,
        SetWatermarkStrings = 71,
        ShowStartGlass = 72,
        SwapMouseButton = 73,
        WOWModuleUnload = 74,
        DwmLockScreenUpdates = 75,
        EnableSessionForMMCSS = 76,
        SetWaitForQueueAttach = 77,
        ThreadMessageQueueAttached = 78,
        PostUIActions = 79,
        EnsureDpiDepSysMetCacheForPlateau = 80,
        ForceEnableNumpadTranslation = 81,
        SetTSFEventState = 82,
        SetShellChangeNotifyHWND = 83,
        DeregisterShellHookWindow = 84,
        DWP_GetEnabledPopupOffset = 85,
        GetModernAppWindow = 86,
        GetWindowContextHelpId = 87,
        RegisterShellHookWindow = 88,
        SetMsgBox = 89,
        InitThreadCoreMessagingIocp = 90,
        ScheduleDispatchNotification = 91,
        SetProgmanWindow = 92,
        SetTaskmanWindow = 93,
        GetClassIcoCur = 94,
        ClearWindowState = 95,
        KillSystemTimer = 96,
        NotifyOverlayWindow = 97,
        RegisterKeyboardCorrectionCallout = 98,
        SetDialogPointer = 99,
        SetVisible = 100,
        SetWindowContextHelpId = 101,
        SetWindowState = 102,
        RegisterWindowArrangementCallout = 103,
        EnableModernAppWindowKeyboardIntercept = 104,
        ArrangeIconicWindows = 105,
        DrawMenuBar = 106,
        CheckImeShowStatusInThread = 107,
        GetSysMenuOffset = 108,
        RedrawFrame = 109,
        RedrawFrameAndHook = 110,
        SetDialogSystemMenu = 111,
        StubSetForegroundWindow = 112,
        SetSysMenu = 113,
        UpdateClientRect = 114,
        UpdateWindow = 115,
        SetCancelRotationDelayHintWindow = 116,
        GetWindowTrackInfoAsync = 117,
        BroadcastImeShowStatusChange = 118,
        SetModernAppWindow = 119,
        RedrawTitle = 120,
        ShowOwnedPopups = 121,
        SwitchToThisWindow = 122,
        UpdateWindows = 123,
        ValidateRgn = 124,
        EnableWindow = 125,
        ChangeWindowMessageFilter = 126,
        GetCursorPos = 127,
        InitAnsiOem = 128,
        NlsKbdSendIMENotification = 129,
        RegisterGhostWindow = 130,
        RegisterLogonProcess = 131,
        RegisterSiblingFrostWindow = 132,
        RegisterUserHungAppHandlers = 133,
        RemoteShadowCleanup = 134,
        RemoteShadowStart = 135,
        SetCaretPos = 136,
        SetThreadQueueMergeSetting = 137,
        UnhookWindowsHook = 138,
        EnableShellWindowManagementBehavior = 139,
        CitSetInfo = 140,
        ScaleSystemMetricForDPIWithoutCache = 141
    }
}

pub fn get_index(call: NtUserCall) -> Option<u16> {
    match get_os_version() {
        #[cfg(any(target_vendor = "win7", feature = "all_os_versions"))]
        Ok(OsVersion::Win7) => win7::NtUserCallIndex::try_from(call).ok().map(|c| c as _),
        Ok(OsVersion::Win8) => win8::NtUserCallIndex::try_from(call).ok().map(|c| c as _),
        Ok(OsVersion::Win81) => win81::NtUserCallIndex::try_from(call).ok().map(|c| c as _),
        Ok(OsVersion::Win10) => win10::NtUserCallIndex::try_from(call).ok().map(|c| c as _),
        Err(_) => None,
    }
}
